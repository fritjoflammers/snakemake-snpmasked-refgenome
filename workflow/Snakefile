import glob
import os
from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
from pathlib import Path


# get config variables
STRAINS = config["strains"]
PER_STRAIN_FASTA = config["per_strain_fasta"]
OUTPUT_DIR=config["output_directory"]

def get_target_files(output_dir):
    target_files = dict(
    snp_split_targets =[
        "{outdir}/all_SNPs_{strain}_GRCm38.bed.gz".format(
            outdir=output_dir,
            strain=strain)
        for strain in STRAINS
    ],
    merged_strain_targets = [
        f"{output_dir}/all_SNPs_all_strains_GRCm38.bed.gz",
        f"{output_dir}/GRCm38_masked_all_strains"
    ]
    )

    if PER_STRAIN_FASTA:
        target_files["single_strain_targets"] = \
                ["{outdir}/GRCm38_masked_{strain}".format(
                    outdir=output_dir,
                    strain=strain)
                    for strain in STRAINS]

    return target_files.values()

all_files = get_target_files(output_dir=OUTPUT_DIR)


print(all_files)


localrules:
    all,
    snp_split_concat,
    rename_fasta_header,
    rename_gtf_names


rule all:
    input:
        all_files,


# rule retrieve_snp_vcf:
#    #    input: HTTP.remote("ftp.sanger.ac.uk/pub/REL-1505-SNPs_Indels/mgp.v5.merged.snps_all.dbSNP142.vcf.gz", keep_local=True)
#    output: "data/mgp.v5.merged.snps_all.dbSNP142.vcf.gz"
#    run:
# 	print("File is there {output}")

include: "rules/prepare.smk"
include: "rules/maskfasta.smk"
include: "rules/cellranger_mkref.smk"
